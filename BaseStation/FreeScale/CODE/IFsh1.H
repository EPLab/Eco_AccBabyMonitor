/** ###################################################################
**     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : IFsh1.H
**     Project   : Connector_App
**     Processor : MC9S12E64CFU
**     Beantype  : IntFLASH
**     Version   : Bean 02.118, Driver 02.01, CPU db: 2.87.373
**     Compiler  : Metrowerks HC12 C Compiler
**     Date/Time : 6/8/2005, 6:19 PM
**     Abstract  :
**         This bean "IntFLASH" implements an access to internal FLASH.
**         The bean support reading/writing data into FLASH, erasing of 
**         selected sector.
**         The bean supports events if the write interrupt is supported.
**         The bean supports following modes of write operations:
**           - Write - writing without any test.
**           - Destructive write - sector is erased if necessary.
**           - Safe write - user event is invoked to save and resore data
**                          from the current sector.
**         The bean requires on-chip FLASH memory (not used/allocated by 
**         other beans).
**     Settings  :
**         Total FLASH memory size       : 64KB
**         Interrupt service             : Disabled
**         Write method                  : Write
**         Wait in RAM                   : no
**     Contents  :
**         SetProtection - byte IFsh1_SetProtection(bool ProtectType,byte ProtectHigh,byte ProtectLow,by...
**         SetByteFlash  - byte IFsh1_SetByteFlash(dword Addr,byte Data);
**         SetWordFlash  - byte IFsh1_SetWordFlash(dword Addr,word Data);
**
**     (c) Copyright UNIS, spol. s r.o. 1997-2002
**     UNIS, spol. s r.o.
**     Jundrovska 33
**     624 00 Brno
**     Czech Republic
**     http      : www.processorexpert.com
**     mail      : info@processorexpert.com
** ###################################################################*/
/* MODULE IFsh1. */


#ifndef __IFsh1
#define __IFsh1

/* MODULE IFsh1. */

#include "Cpu.h"


#pragma CODE_SEG IFsh1_CODE            /* Code section for this module. */


byte IFsh1_SetProtection(bool ProtectType,byte ProtectHigh,byte ProtectLow,byte Block);
/*
** ===================================================================
**     Method      :  IFsh1_SetProtection (bean IntFLASH)
**
**     Description :
**         Method allows write to protection register. Please see
**         Flash Block User Guide.
**     Parameters  :
**         NAME            - DESCRIPTION
**         ProtectType     - Possible values: 0 or 1.
**                           Depend on CPU type. Two sense are
**                           possible.
**                           First:
**                           - 0 = whole Flash array is protected. In
**                           this case other parameters are don't
**                           care.
**                           - 1 = protection size depend on
**                           ProtectHigh and ProtectLow parameters.
**                           Second:
**                           - 0 = ProtectHigh and ProtectLow
**                           parameters define range to by protected .
**                           - 1 = ProtectHigh and ProtectLow
**                           parameters define range to by
**                           unprotected .
**         ProtectHigh     - Flash higher address
**                           range protection. Possible values:
**                           - 0 - 3 - defines range (size of range
**                           depend on CPU type) , 4 - Protection
**                           disabled
**         ProtectLow      - Flash lower address
**                           range protection. Possible values:
**                           - 0 - 3 - defines range (size of range
**                           depend on CPU type) , 4 - Protection
**                           disabled
**         Block           - Flash block number. Number of
**                           blocks depend on CPU type. If CPU has
**                           only one block, the value is don't care.
**     Returns     :
**         ---             - Error code, possible codes:
**                           - ERR_OK - OK
**                           - ERR_RANGE - Value is out of range
**                           - ERR_VALUE - Parameter of incorrect
**                           value
**                           - ERR_SPEED - This device does not work
**                           in the active speed mode
** ===================================================================
*/


void IFsh1_Init(void);
/*
** ===================================================================
**     Method      :  IFsh1_Init (bean IntFLASH)
**
**     Description :
**         This method is internal. It is used by Processor Expert
**         only.
** ===================================================================
*/


byte IFsh1_SetByteFlash(dword Addr,byte Data);
/*
** ===================================================================
**     Method      :  IFsh1_SetByteFlash (bean IntFLASH)
**
**     Description :
**         Write byte to address in FLASH.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Addr            - Address to FLASH.
**         Data            - Data to write.
**     Returns     :
**         ---             - Error code, possible codes:
**                           - ERR_OK - OK
**                           - ERR_NOTAVAIL - Desired program/erase
**                           operation is not available
**                           - ERR_RANGE - Address is out of range
**                           - ERR_VALUE - Read value is not equal to
**                           written value
**                           - ERR_SPEED - This device does not work
**                           in the active speed mode
**                           - ERR_BUSY - Device is busy
** ===================================================================
*/

byte IFsh1_SetWordFlash(dword Addr,word Data);
/*
** ===================================================================
**     Method      :  IFsh1_SetWordFlash (bean IntFLASH)
**
**     Description :
**         Write word to address in FLASH.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Addr            - Address to FLASH.
**         Data            - Data to write.
**     Returns     :
**         ---             - Error code, possible codes:
**                           - ERR_OK - OK
**                           - ERR_NOTAVAIL - Desired program/erase
**                           operation is not available
**                           - ERR_RANGE - Address is out of range
**                           - ERR_VALUE - Read value is not equal to
**                           written value
**                           - ERR_SPEED - This device does not work
**                           in the active speed mode
**                           - ERR_BUSY - Device is busy
** ===================================================================
*/

#pragma CODE_SEG DEFAULT               /* Change code section to DEFAULT. */

/* END IFsh1. */

#endif /* ifndef __IFsh1 */
/*
** ###################################################################
**
**     This file was created by UNIS Processor Expert 03.33 for 
**     the Motorola HCS12 series of microcontrollers.
**
** ###################################################################
*/
